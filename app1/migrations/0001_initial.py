# Generated by Django 3.1.7 on 2023-07-19 01:35

import app1.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CharacterVoiceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_voice', models.CharField(max_length=20)),
                ('yomigana', models.CharField(default='none', max_length=40)),
                ('alias', models.CharField(blank=True, max_length=127, null=True)),
                ('cv_link', models.CharField(blank=True, default='', max_length=64, null=True)),
            ],
            options={
                'verbose_name_plural': 'character voice lists',
                'ordering': ['yomigana'],
            },
        ),
        migrations.CreateModel(
            name='CircleModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('circle', models.CharField(max_length=127)),
                ('yomigana', models.CharField(max_length=127)),
                ('alias', models.CharField(blank=True, max_length=127, null=True)),
                ('circle_id', models.CharField(blank=True, max_length=10, null=True)),
                ('url_circle', models.CharField(blank=True, max_length=127, null=True)),
                ('supplement', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Circle lists',
                'ordering': ['yomigana'],
            },
        ),
        migrations.CreateModel(
            name='CircleState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CircleState2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='GenreModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=31)),
                ('yomigana', models.CharField(max_length=31)),
            ],
            options={
                'verbose_name_plural': 'Genre lists',
                'ordering': ['yomigana'],
            },
        ),
        migrations.CreateModel(
            name='OrderMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.CharField(max_length=63)),
                ('menucode', models.CharField(default='none', max_length=32)),
                ('order', models.IntegerField()),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ScenarioWriterModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario_writer', models.CharField(max_length=30)),
                ('yomigana', models.CharField(max_length=60)),
                ('alias', models.CharField(blank=True, max_length=127, null=True)),
            ],
            options={
                'verbose_name_plural': 'Scenario Writer lists',
                'ordering': ['yomigana'],
            },
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(default='None', max_length=100)),
                ('ip_address', models.CharField(default='0.0.0', max_length=50)),
                ('user', models.CharField(default='None', max_length=30)),
                ('elapsed_time', models.FloatField(default=0)),
                ('adddate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Upload_file',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_txt', models.FileField(upload_to='uploads/', validators=[django.core.validators.FileExtensionValidator(['txt'])], verbose_name='info.txt')),
                ('file_txt2', models.FileField(default=None, upload_to='uploads/', validators=[django.core.validators.FileExtensionValidator(['txt'])], verbose_name='output.txt')),
            ],
        ),
        migrations.CreateModel(
            name='Upload_file_zip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_zip', models.FileField(upload_to='uploads/', validators=[django.core.validators.FileExtensionValidator(['zip'])], verbose_name='zipファイル')),
            ],
        ),
        migrations.CreateModel(
            name='WorkTextState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('code', models.CharField(max_length=32)),
                ('description', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VoiceDataModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_record_id', models.CharField(default=app1.models.create_public_record_id, max_length=25)),
                ('name', models.CharField(max_length=255)),
                ('work_id', models.CharField(max_length=31)),
                ('release_date', models.DateField()),
                ('add_date', models.DateField(default=datetime.datetime.now)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('url_af', models.CharField(blank=True, max_length=255)),
                ('url_img', models.CharField(blank=True, max_length=255)),
                ('commerce_switch', models.BooleanField(default=True)),
                ('public_switch', models.BooleanField(default=True)),
                ('public_delete', models.BooleanField(default=False)),
                ('sample_switch', models.BooleanField(default=True)),
                ('adult_switch', models.BooleanField(default=True)),
                ('confidence', models.FloatField(default=100)),
                ('display_range', models.IntegerField(default=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_original', models.TextField(blank=True, null=True)),
                ('description_conv', models.TextField(blank=True, null=True)),
                ('chapter_names', models.CharField(blank=True, max_length=2048, null=True)),
                ('maintext_original', models.TextField(blank=True, null=True)),
                ('maintext', models.TextField()),
                ('maintext_conv', models.TextField(blank=True, null=True)),
                ('maintext_old', models.TextField(blank=True, null=True)),
                ('text_version', models.CharField(blank=True, max_length=64, null=True)),
                ('character_voice', models.ManyToManyField(blank=True, to='app1.CharacterVoiceModel')),
                ('circle', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='app1.circlemodel')),
                ('genres', models.ManyToManyField(blank=True, to='app1.GenreModel')),
                ('scenario_writers', models.ManyToManyField(blank=True, related_name='scenario_writers_many', to='app1.ScenarioWriterModel')),
            ],
            options={
                'verbose_name_plural': 'Voice Data lists',
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_count', models.IntegerField(default=0)),
                ('permission_addwork', models.BooleanField(default=True)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SearchInfoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100)),
                ('sample_switch', models.BooleanField(default=True)),
                ('character_voice', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app1.charactervoicemodel')),
                ('circle', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app1.circlemodel')),
                ('create_user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app1.ordermenu')),
                ('scenario', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app1.scenariowritermodel')),
            ],
        ),
        migrations.AddField(
            model_name='circlemodel',
            name='approval_state',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app1.circlestate2'),
        ),
        migrations.AddField(
            model_name='circlemodel',
            name='publication_state',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app1.circlestate'),
        ),
    ]
